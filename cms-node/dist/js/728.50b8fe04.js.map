{"version":3,"file":"js/728.50b8fe04.js","mappings":"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","sources":["webpack://vue-cms/./src/hooks/getAutoHeight.js","webpack://vue-cms/./src/hooks/quitFn.js","webpack://vue-cms/./src/utils/formatTime.js","webpack://vue-cms/./src/api/course.js","webpack://vue-cms/./src/views/course-manage/components/EditCourse.vue","webpack://vue-cms/./src/views/course-manage/components/EditCourse.vue?fdb6","webpack://vue-cms/./src/views/course-manage/index.vue","webpack://vue-cms/./src/views/course-manage/index.vue?1079"],"sourcesContent":["import { ref, onMounted, onActivated, onDeactivated, onUnmounted } from 'vue'\r\n\r\nexport const getAutoHeight = (marginTop) => {\r\n  // marginTop每个组件传入的高度\r\n  const tableHeight = ref(window.innerHeight - marginTop)\r\n\r\n  // 1.\r\n  const refreshHeight = () => {\r\n    tableHeight.value = window.innerHeight - marginTop\r\n  }\r\n  const refresh = (margin) => {\r\n    marginTop = margin\r\n    tableHeight.value = window.innerHeight - margin\r\n  }\r\n  // 页面挂载\r\n  onMounted(() => {\r\n    // resize尺寸发生变化时\r\n    window.addEventListener('resize', refreshHeight)\r\n  })\r\n  // 页面卸载\r\n  onUnmounted(() => {\r\n    window.removeEventListener('resize', refreshHeight)\r\n  })\r\n  // 页面激活\r\n  onActivated(() => {\r\n    window.addEventListener('resize', refreshHeight)\r\n  })\r\n  // 页面失活\r\n  onDeactivated(() => {\r\n    window.removeEventListener('resize', refreshHeight)\r\n  })\r\n  return { tableHeight, refresh }\r\n} ","import { ElMessageBox } from 'element-plus'\r\n\r\nexport const quitFn = ({ contentTxt, titleTxt, confirmButtonText, cancelButtonText, type }, confirmCb, cancelCb) => {\r\n  ElMessageBox.confirm(contentTxt || '当前内容还未保存,确定取消吗', titleTxt || '取消保存', {\r\n    confirmButtonText: confirmButtonText || '确认',\r\n    cancelButtonText: cancelButtonText || '取消',\r\n    type: type || 'warning'\r\n  })\r\n    .then(() => {\r\n      // 用户点了 确认按钮 || 过假留真     过真留假 &&\r\n      confirmCb && confirmCb()\r\n    })\r\n    .catch(() => {\r\n      // 用户点了 取消按钮\r\n      cancelCb && cancelCb()\r\n    })\r\n}\r\n\r\n","export const formatTime = (time) => {\r\n  let date = new Date(time / 1),//转换为数值类型\r\n    year = date.getFullYear(),//年\r\n    // 1-9需要补零  而11补零011所以要截取后面两位\r\n    month = (\"0\" + (date.getMonth() + 1)).slice(-2),//截取字符串最后两位 月\r\n    day = (\"0\" + date.getDate()).slice(-2),//日\r\n    hour = (\"0\" + date.getHours()).slice(-2),//时\r\n    minute = (\"0\" + date.getMinutes()).slice(-2),//分钟\r\n    second = (\"0\" + date.getSeconds()).slice(-2);//秒\r\n\r\n  // 2022-06-21 19:38:26\r\n  return `${year}-${month}-${day} ${hour}:${minute}:${second}`\r\n\r\n}\r\n\r\nexport const formatDate = (time) => {\r\n  let date = new Date(time / 1),\r\n    year = date.getFullYear(),\r\n    month = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n    day = (\"0\" + date.getDate()).slice(-2),\r\n    week = date.getDay(),\r\n    weekTxt = '周一';\r\n\r\n\r\n  switch (week) {\r\n    case 0:\r\n      weekTxt = '周日'\r\n      break;\r\n    case 1:\r\n      weekTxt = '周一'\r\n      break;\r\n    case 2:\r\n      weekTxt = '周二'\r\n      break;\r\n    case 3:\r\n      weekTxt = '周三'\r\n      break;\r\n    case 4:\r\n      weekTxt = '周四'\r\n      break;\r\n    case 5:\r\n      weekTxt = '周五'\r\n      break;\r\n    case 6:\r\n      weekTxt = '周六'\r\n      break;\r\n\r\n  }\r\n  // 2022-06-21 周四\r\n  return `${year}-${month}-${day} ${weekTxt}`\r\n}\r\n\r\nexport const formatDetail = (time) => {\r\n  let date = new Date(time / 1),\r\n    hour = (\"0\" + date.getHours()).slice(-2),\r\n    minute = (\"0\" + date.getMinutes()).slice(-2),\r\n    second = (\"0\" + date.getSeconds()).slice(-2);\r\n\r\n  // 19:38:26\r\n  return `${hour}:${minute}:${second}`\r\n\r\n}","import request from '@/utils/request'\r\n// 获取课程列表\r\nexport const getCourseList = (params) => {\r\n  return request({\r\n    url: '/course/courseList',\r\n    params\r\n  })\r\n}\r\n// 修改课程基础信息\r\nexport const reviseCourseBase = (data) => {\r\n  return request({\r\n    url: '/course/reviseCourseBase',\r\n    method: \"POST\",\r\n    data,\r\n  })\r\n}\r\n// 修改课程封面\r\nexport const reviseCourseCover = (data) => {\r\n  return request({\r\n    url: '/course/reviseCourseCover',\r\n    method: \"POST\",\r\n    data,\r\n  })\r\n}\r\n","<template>\r\n  <div class=\"course-edit\">\r\n    <!--el-drawer抽屉  :before-close关闭之前时的函数 -->\r\n    <el-drawer v-model=\"isDrawer\" size=\"50%\" :before-close=\"close\">\r\n      <template #header>\r\n        <h4>编辑课程</h4>\r\n      </template>\r\n      <!-- el-tabs选项卡  v-model=\"activeName\"选择打开哪个选项卡 :rules=\"rules\"表规则-->\r\n      <el-tabs v-model=\"activeName\">\r\n        <!-- 基础信息 -->\r\n        <el-tab-pane name=\"first\" label=\"基础信息\">\r\n          <!-- 表单绑定数据用:model 不是v-model -->\r\n          <el-form :model=\"courseQuery\" :rules=\"rules\" ref=\"baseFormRef\">\r\n            <el-form-item label=\"项目\" prop=\"kindName\">\r\n              <el-input v-model=\"courseQuery.kindName\" disabled></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"课程名称\" prop=\"courseName\">\r\n              <el-input v-model=\"courseQuery.courseName\" disabled></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"原价\" prop=\"originalPrice\">\r\n              <el-input v-model=\"courseQuery.originalPrice\">\r\n                <template #prefix> ￥ </template>\r\n              </el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"售价\" prop=\"sellingPrice\">\r\n              <el-input v-model=\"courseQuery.sellingPrice\">\r\n                <template #prefix> ￥ </template>\r\n              </el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"底价\" prop=\"downPrice\">\r\n              <el-input v-model=\"courseQuery.downPrice\">\r\n                <template #prefix> ￥ </template>\r\n              </el-input>\r\n            </el-form-item>\r\n          </el-form>\r\n        </el-tab-pane>\r\n        <!-- 课程封面 -->\r\n        <el-tab-pane name=\"second\" label=\"课程封面\">\r\n          <el-form :model=\"coverInfo\">\r\n            <el-form-item label=\"课程描述\">\r\n              <el-input\r\n                v-model=\"coverInfo.description\"\r\n                :placeholder=\"course.description\"\r\n              ></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"更换封面\">\r\n              <!--  v-model:file-list默认上传文件 :auto-upload=\"false\"是否自动上传    :limit=\"1\"限制个数 accept=\".png,.jpg\"接受文件后缀 -->\r\n              <el-upload\r\n                v-model:file-list=\"coverInfo.file\"\r\n                :auto-upload=\"false\"\r\n                :limit=\"1\"\r\n                accept=\".png,.jpg\"\r\n              >\r\n                <el-button type=\"primary\">选择文件</el-button>\r\n                <template #tip>\r\n                  建议:课程封面大小建议上传1125*633,不超过5M,格式为jpg、png</template\r\n                >\r\n              </el-upload>\r\n            </el-form-item>\r\n            <div class=\"cover-image\">\r\n              <!-- image图片 preview-src-list\t开启图片预览功能:initial-index=\"0\"初始预览图像索引-->\r\n              <el-image\r\n                style=\"width: 100px; height: 100px\"\r\n                :src=\"course.coverImage\"\r\n                :preview-src-list=\"[course.coverImage]\"\r\n                :initial-index=\"0\"\r\n                fit=\"cover\"\r\n              />\r\n            </div>\r\n          </el-form>\r\n        </el-tab-pane>\r\n      </el-tabs>\r\n      <!-- 底部确认取消 -->\r\n      <template #footer>\r\n        <el-button @click=\"close\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"submitFn\">确认</el-button>\r\n      </template>\r\n    </el-drawer>\r\n  </div>\r\n</template>\r\n<script setup>\r\nimport { ref, defineExpose, defineProps, nextTick, defineEmits } from \"vue\";\r\nimport { reviseCourseBase, reviseCourseCover } from \"@/api/course\";\r\nimport { quitFn } from \"@/hooks/quitFn\"; // 导入 确认/提示 弹窗\r\nimport { ElMessage } from \"element-plus\"; // 提示弹窗UI导入\r\nconst props = defineProps([\"course\"]); // 接收父组件传来的数据\r\nconst emit = defineEmits([\"change\"]); // 父组件给绑定的change事件 重新获取数据\r\nconst isDrawer = ref(false); // 控制编辑课程打开关闭\r\nconst activeName = ref(\"first\"); // 选项卡切换初始值是el-tab-page的name值\r\n//3. 定义好要传过来的数据\r\nconst courseQueryRaw = {\r\n  kindName: \"\",\r\n  courseName: \"\",\r\n  originalPrice: \"\",\r\n  sellingPrice: \"\",\r\n  downPrice: \"\",\r\n};\r\nconst courseQuery = ref(courseQueryRaw); // 处理数据 在上面选项卡中使用\r\n// 5.定义表规则\r\nconst rules = ref({\r\n  kindName: [{ required: true, message: \"项目名是必填项\", trigger: \"blur\" }],\r\n  courseName: [{ required: true, message: \"课程名是必填项\", trigger: \"blur\" }],\r\n  originalPrice: [{ required: true, message: \"原价是必填项\", trigger: \"blur\" }],\r\n  sellingPrice: [{ required: true, message: \"售价是必填项\", trigger: \"blur\" }],\r\n  downPrice: [{ required: true, message: \"底价是必填项\", trigger: \"blur\" }],\r\n});\r\nconst baseFormRef = ref(null); //操作form表单的dom\r\n// 课程封面\r\nconst coverInfo = ref({\r\n  description: \"\", //课程 表述\r\n  file: [], // 文件列表\r\n});\r\n// 4.初始化课程信息\r\nconst initCourseQuery = async () => {\r\n  // 等待数据准备完毕后再往下执行\r\n  await nextTick();\r\n  const courseQueryValue = courseQuery.value;\r\n  const course = props.course;\r\n  console.log(course);\r\n  // 遍历给值\r\n  for (const key in courseQueryValue) {\r\n    // course中的每一对给到courseQueryValue中 处理好之后选项卡中就有数据显示了\r\n    courseQueryValue[key] = course[key];\r\n  }\r\n};\r\n//1. 打开抽屉的函数\r\nconst open = () => {\r\n  isDrawer.value = true;\r\n  initCourseQuery();\r\n};\r\n// 2.关闭抽屉的函数\r\nconst close = () => {\r\n  // 调用导入的quitFn\r\n  quitFn({}, () => {\r\n    closeNoFn(); // 执行下面定义的函数\r\n  });\r\n};\r\n//2.关闭抽屉函数之后的逻辑函数\r\nconst closeNoFn = () => {\r\n  // 关闭界面\r\n  isDrawer.value = false;\r\n  // 选项卡恢复初始 默认的第一个\r\n  activeName.value = \"first\";\r\n  baseFormRef.value.clearValidate(); //清除表单数据clearValidate()\r\n};\r\n// 6.修改后点击确认 来修改信息\r\nconst submitFn = async () => {\r\n  // 根据选项卡来操作.如果是选项卡第一页\r\n  if (activeName.value === \"first\") {\r\n    // 表单校验之后，基础信息数据提交\r\n    baseFormRef.value.validate(async (value) => {\r\n      if (value) {\r\n        // 校验通过 调用后端接口传入修改的数据，后端返回数据解构用data接受\r\n        const { data } = await reviseCourseBase(courseQuery.value);\r\n        if (!data.code) {\r\n          // 成功\r\n          ElMessage.success(data.txt);\r\n          closeNoFn(); //关闭弹窗\r\n          emit(\"change\"); //触发父组件函数, 重新获取数据\r\n        }\r\n      } else {\r\n        ElMessage.warning(\"信息填写不规范\");\r\n      }\r\n    });\r\n  } else {\r\n    // 封面修改提交\r\n    const coverInfoValue = coverInfo.value;\r\n    if (coverInfoValue.description || coverInfoValue.file.length) {\r\n      // 任一数据有值 走进来\r\n      let formData = new FormData();\r\n      // 放课程名称\r\n      formData.append(\"courseName\", props.course.courseName); //键值对\r\n      if (coverInfoValue.description) {\r\n        // 放课程描述\r\n        formData.append(\"description\", coverInfoValue.description);\r\n      }\r\n      if (coverInfoValue.file.length) {\r\n        // 放文件\r\n        formData.append(\"file\", coverInfoValue.file[0].raw); //coverInfoValue.file[0].raw文件名称\r\n        // console.log(coverInfoValue.file);\r\n      }\r\n      const { data } = await reviseCourseCover(formData);\r\n      console.log(data);\r\n      if (!data.code) {\r\n        // 成功\r\n        ElMessage.success(data.txt);\r\n        closeNoFn(); //退出抽屉\r\n        emit(\"change\"); //触发父组件的时间函数\r\n        coverInfoValue.file = []; //清空图片\r\n      } else {\r\n        ElMessage.error(data.txt);\r\n      }\r\n    }\r\n  }\r\n};\r\n// 导出函数\r\ndefineExpose({ open });\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n:deep(.el-drawer__footer) {\r\n  border-top: 1px solid #eee;\r\n}\r\n:deep(.el-form-item__label) {\r\n  width: 80px;\r\n  text-align: right;\r\n}\r\n:deep(.el-input) {\r\n  width: 380px;\r\n}\r\n.cover-image {\r\n  width: 90px;\r\n  margin-left: 80px;\r\n  margin-top: -18px;\r\n  img {\r\n    width: 100%;\r\n  }\r\n}\r\n</style>\r\n","import script from \"./EditCourse.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EditCourse.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./EditCourse.vue?vue&type=style&index=0&id=19ca5f42&lang=scss&scoped=true\"\n\nimport exportComponent from \"D:\\\\cms\\\\vue-first\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-19ca5f42\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"\">\r\n    <!-- 头部卡片 -->\r\n    <el-card>\r\n      <h4>课程管理</h4>\r\n    </el-card>\r\n    <!-- // 主题部分 -->\r\n    <el-card class=\"table\">\r\n      <div class=\"filter-section\">\r\n        <!-- // 下拉选框 -->\r\n        <!-- 同步绑定数据queryParams.kindName -->\r\n        <!-- \r\n          选中项绑定值 v-model=\"queryParams.kindName\"\r\n          clearable 是否可以清空选项 默认false\r\n          class=\"filter\"\r\n          placeholder=\"请选择项目\"\r\n         @change=\"getCourseListFn\" 选中值发生变化时触发change事件\r\n         -->\r\n        <el-select\r\n          v-model=\"queryParams.kindName\"\r\n          clearable\r\n          class=\"filter\"\r\n          placeholder=\"请选择项目\"\r\n          @change=\"getCourseListFn\"\r\n        >\r\n          <!-- 选项的值 :value=\"item\" 选项的标签，若不设置则默认与value相同 :label=\"item\"-->\r\n          <el-option\r\n            v-for=\"item in kindNameOptions\"\r\n            :key=\"item\"\r\n            :value=\"item\"\r\n            :label=\"item\"\r\n          ></el-option>\r\n        </el-select>\r\n        <!-- // 输入框 -->\r\n        <el-input\r\n          v-model=\"queryParams.courseName\"\r\n          clearable\r\n          placeholder=\"请输入课程名称\"\r\n          class=\"filter\"\r\n          @change=\"getCourseListFn\"\r\n        ></el-input>\r\n      </div>\r\n      <!-- // 展示内容区域 -->\r\n      <el-table\r\n        :data=\"courseList\"\r\n        v-loading=\"loading\"\r\n        class=\"table-wrapper\"\r\n        :max-height=\"tableHeight\"\r\n      >\r\n      <!--   fixed=\"left\"固定到左侧 -->\r\n        <el-table-column\r\n          width=\"200\"\r\n          prop=\"courseName\"\r\n          label=\"课程名称\"\r\n          fixed=\"left\"\r\n        ></el-table-column>\r\n        <el-table-column\r\n          width=\"200\"\r\n          prop=\"sellingPrice\"\r\n          label=\"售价\"\r\n        ></el-table-column>\r\n        <el-table-column\r\n          width=\"200\"\r\n          prop=\"downPrice\"\r\n          label=\"底价\"\r\n        ></el-table-column>\r\n        <el-table-column\r\n          width=\"200\"\r\n          prop=\"kindName\"\r\n          label=\"项目\"\r\n        ></el-table-column>\r\n        <el-table-column width=\"200\" label=\"是否售卖\">\r\n          <template #default=\"{ row }\">\r\n            <el-switch\r\n              v-model=\"row.isSale\"\r\n              active-color=\"#13ce66\"\r\n              active-text=\"上架\"\r\n              disabled\r\n            ></el-switch>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          width=\"200\"\r\n          prop=\"updatePeople\"\r\n          label=\"更新人\"\r\n        ></el-table-column>\r\n        <el-table-column width=\"200\" label=\"更新时间\">\r\n          <template #default=\"{ row }\">\r\n            {{ formatTime(row.updateTime) }}\r\n          </template>\r\n        </el-table-column>\r\n        <!-- fixed=\"right\" align=\"center\"固定到右侧,文本左右居中 -->\r\n        <el-table-column width=\"200\" label=\"操作\" fixed=\"right\" align=\"center\">\r\n          <template #default=\"{ row }\">\r\n            <!-- // 点击后将这一行的数据row传过去 -->\r\n            <el-button size=\"small\" @click=\"openEditCourse(row)\"\r\n              >编辑课程</el-button\r\n            >\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <!-- 分页器 -->\r\n      <el-pagination\r\n        v-model:current-page=\"queryParams.currentPage\"\r\n        v-model:page-size=\"queryParams.pageSize\"\r\n        :page-sizes=\"[10, 20, 50, 100]\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\"\r\n        @size-change=\"getCourseListFn\"\r\n        @current-change=\"getCourseListFn\"\r\n        class=\"pagination\"\r\n      />\r\n    </el-card>\r\n    <!-- // 编辑组件 -->\r\n\r\n    <!-- ref=\"editCourseRef\" 拿到自组建的实例对象方便操作 父传子的数据:course=\"course\"  @change=\"getCourseListFn\" -->\r\n    <EditCourse\r\n      ref=\"editCourseRef\"\r\n      :course=\"course\"\r\n      @change=\"getCourseListFn\"\r\n    ></EditCourse>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\nimport { getCourseList } from \"@/api/course\"; // 导入获取课程列表的api 从后端请求数据\r\nimport { formatTime } from \"@/utils/formatTime\"; // 导入格式化时间函数\r\nimport { getAutoHeight } from \"@/hooks/getAutoHeight\"; // 自适应高度函数\r\nimport EditCourse from \"./components/EditCourse.vue\"; // 导入子组件 即编辑课程里面的内容\r\n//1.定义好所需要的数据 然后运行导入的函数将数据传到后端\r\nconst queryParams = ref({\r\n  pageSize: 10,\r\n  currentPage: 1,\r\n  kindName: \"\",\r\n  courseName: \"\",\r\n});\r\n// 定义一个数组存放筛选后的kindName 因为传过来的数据中kindName有重复的\r\nconst kindNameOptions = ref([]);\r\nconst courseList = ref([]); // 存放所有课程数据（id,kindName,courseName...数据）\r\nconst total = ref(0);\r\nconst loading = ref(true);\r\nconst editCourseRef = ref(null);//操作组件的dom\r\nconst course = ref({}); //课程数据\r\nconst { tableHeight } = getAutoHeight(340);\r\n// 2.定义获取接口的操作的函数\r\nconst getCourseListFn = async () => {\r\n  loading.value = true; // 加载动画\r\n  // 接收后端请求的数据 要将定义的queryParams的数据带上\r\n  const { data } = await getCourseList(queryParams.value);\r\n  console.log(data);\r\n  courseList.value = data.data;\r\n  total.value = data.total;\r\n  kindNameOptions.value = data.kindNameOptions; // 后端筛选后的kindName 存入\r\n  setTimeout(() => {\r\n    loading.value = false;\r\n  }, 500);\r\n};\r\ngetCourseListFn();\r\n// 编辑课程的函数\r\nconst openEditCourse = (row) => {\r\n  course.value = row;//把当前行的数据赋值给course\r\n  editCourseRef.value.open();//触发子组件的函数=>打开子组件的抽屉\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["getAutoHeight","marginTop","tableHeight","ref","window","innerHeight","refreshHeight","value","refresh","margin","onMounted","addEventListener","onUnmounted","removeEventListener","onActivated","onDeactivated","quitFn","contentTxt","titleTxt","confirmButtonText","cancelButtonText","type","confirmCb","cancelCb","ElMessageBox","then","catch","formatTime","time","date","Date","year","getFullYear","month","getMonth","slice","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","formatDate","week","getDay","weekTxt","formatDetail","getCourseList","params","request","url","reviseCourseBase","data","method","reviseCourseCover","isDrawer","activeName","courseQueryRaw","kindName","courseName","originalPrice","sellingPrice","downPrice","courseQuery","rules","required","message","trigger","baseFormRef","coverInfo","description","file","initCourseQuery","async","nextTick","courseQueryValue","course","props","console","log","key","open","close","closeNoFn","clearValidate","submitFn","validate","code","ElMessage","txt","emit","coverInfoValue","length","formData","FormData","append","raw","expose","__exports__","queryParams","pageSize","currentPage","kindNameOptions","courseList","total","loading","editCourseRef","getCourseListFn","setTimeout","openEditCourse","row"],"sourceRoot":""}