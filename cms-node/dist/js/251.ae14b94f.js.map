{"version":3,"file":"js/251.ae14b94f.js","mappings":"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","sources":["webpack://vue-cms/./src/api/live.js","webpack://vue-cms/./src/hooks/getAutoHeight.js","webpack://vue-cms/./src/hooks/quitFn.js","webpack://vue-cms/./src/utils/formatTime.js","webpack://vue-cms/./src/api/class.js","webpack://vue-cms/./src/views/course-class/components/AddLiveDialog.vue","webpack://vue-cms/./src/views/course-class/components/AddLiveDialog.vue?76bf","webpack://vue-cms/./src/views/course-class/components/AddLive.vue","webpack://vue-cms/./src/views/course-class/components/AddLive.vue?c499","webpack://vue-cms/./src/views/course-class/index.vue","webpack://vue-cms/./src/views/course-class/index.vue?1e2c"],"sourcesContent":["import request from \"@/utils/request\";\r\n// 新增直播 \r\nexport const addLive = (data) => {\r\n  return request({\r\n    url: '/live/addLive',\r\n    method: 'POST',\r\n    data\r\n  })\r\n}\r\n\r\n// 删除直播 \r\nexport const deleteLive = (data) => {\r\n  return request({\r\n    url: '/live/deleteLive',\r\n    method: 'POST',\r\n    data\r\n  })\r\n}\r\n\r\n// 获取直播列表数据  \r\n\r\nexport const getLiveList = (params) => {\r\n  return request({\r\n    url: '/live/liveList',\r\n    params\r\n  })\r\n}\r\n\r\n// 修改直播 \r\nexport const reviseLive = (data) => {\r\n  return request({\r\n    url: '/live/reviseLive',\r\n    method: 'POST',\r\n    data\r\n  })\r\n}","import { ref, onMounted, onActivated, onDeactivated, onUnmounted } from 'vue'\r\n\r\nexport const getAutoHeight = (marginTop) => {\r\n  // marginTop每个组件传入的高度\r\n  const tableHeight = ref(window.innerHeight - marginTop)\r\n\r\n  // 1.\r\n  const refreshHeight = () => {\r\n    tableHeight.value = window.innerHeight - marginTop\r\n  }\r\n  const refresh = (margin) => {\r\n    marginTop = margin\r\n    tableHeight.value = window.innerHeight - margin\r\n  }\r\n  // 页面挂载\r\n  onMounted(() => {\r\n    // resize尺寸发生变化时\r\n    window.addEventListener('resize', refreshHeight)\r\n  })\r\n  // 页面卸载\r\n  onUnmounted(() => {\r\n    window.removeEventListener('resize', refreshHeight)\r\n  })\r\n  // 页面激活\r\n  onActivated(() => {\r\n    window.addEventListener('resize', refreshHeight)\r\n  })\r\n  // 页面失活\r\n  onDeactivated(() => {\r\n    window.removeEventListener('resize', refreshHeight)\r\n  })\r\n  return { tableHeight, refresh }\r\n} ","import { ElMessageBox } from 'element-plus'\r\n\r\nexport const quitFn = ({ contentTxt, titleTxt, confirmButtonText, cancelButtonText, type }, confirmCb, cancelCb) => {\r\n  ElMessageBox.confirm(contentTxt || '当前内容还未保存,确定取消吗', titleTxt || '取消保存', {\r\n    confirmButtonText: confirmButtonText || '确认',\r\n    cancelButtonText: cancelButtonText || '取消',\r\n    type: type || 'warning'\r\n  })\r\n    .then(() => {\r\n      // 用户点了 确认按钮 || 过假留真     过真留假 &&\r\n      confirmCb && confirmCb()\r\n    })\r\n    .catch(() => {\r\n      // 用户点了 取消按钮\r\n      cancelCb && cancelCb()\r\n    })\r\n}\r\n\r\n","export const formatTime = (time) => {\r\n  let date = new Date(time / 1),//转换为数值类型\r\n    year = date.getFullYear(),//年\r\n    // 1-9需要补零  而11补零011所以要截取后面两位\r\n    month = (\"0\" + (date.getMonth() + 1)).slice(-2),//截取字符串最后两位 月\r\n    day = (\"0\" + date.getDate()).slice(-2),//日\r\n    hour = (\"0\" + date.getHours()).slice(-2),//时\r\n    minute = (\"0\" + date.getMinutes()).slice(-2),//分钟\r\n    second = (\"0\" + date.getSeconds()).slice(-2);//秒\r\n\r\n  // 2022-06-21 19:38:26\r\n  return `${year}-${month}-${day} ${hour}:${minute}:${second}`\r\n\r\n}\r\n\r\nexport const formatDate = (time) => {\r\n  let date = new Date(time / 1),\r\n    year = date.getFullYear(),\r\n    month = (\"0\" + (date.getMonth() + 1)).slice(-2),\r\n    day = (\"0\" + date.getDate()).slice(-2),\r\n    week = date.getDay(),\r\n    weekTxt = '周一';\r\n\r\n\r\n  switch (week) {\r\n    case 0:\r\n      weekTxt = '周日'\r\n      break;\r\n    case 1:\r\n      weekTxt = '周一'\r\n      break;\r\n    case 2:\r\n      weekTxt = '周二'\r\n      break;\r\n    case 3:\r\n      weekTxt = '周三'\r\n      break;\r\n    case 4:\r\n      weekTxt = '周四'\r\n      break;\r\n    case 5:\r\n      weekTxt = '周五'\r\n      break;\r\n    case 6:\r\n      weekTxt = '周六'\r\n      break;\r\n\r\n  }\r\n  // 2022-06-21 周四\r\n  return `${year}-${month}-${day} ${weekTxt}`\r\n}\r\n\r\nexport const formatDetail = (time) => {\r\n  let date = new Date(time / 1),\r\n    hour = (\"0\" + date.getHours()).slice(-2),\r\n    minute = (\"0\" + date.getMinutes()).slice(-2),\r\n    second = (\"0\" + date.getSeconds()).slice(-2);\r\n\r\n  // 19:38:26\r\n  return `${hour}:${minute}:${second}`\r\n\r\n}","import request from \"@/utils/request\";\r\n// 获取班期列表\r\nexport const getClassList = (params) => {\r\n  return request({\r\n    url: '/class/classList',\r\n    params\r\n  })\r\n}\r\n\r\n","<template>\r\n  <div class=\"\">\r\n    <!--el-dialog对话框 :before-close=\"close\"在关闭之前的函数 -->\r\n    <el-dialog v-model=\"isOpen\" :before-close=\"close\">\r\n      <template #header> 新建直播 </template>\r\n      <el-form :model=\"queryParams\" :rules=\"rules\" ref=\"formRef\" class=\"form\">\r\n        <el-form-item prop=\"liveName\" label=\"直播标题\">\r\n          <el-input\r\n            v-model=\"queryParams.liveName\"\r\n            clearable\r\n            placeholder=\"请输入直播标题\"\r\n          >\r\n          </el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"liveTime\" label=\"直播开始时间\">\r\n          <!--  :default-time=\"defaultTime\"默认时间\r\n          disabled-date\t一个用来判断该日期是否被禁用的函数，接受一个 Date 对象作为参数。\r\n           应该返回一个 Boolean 值。\r\n          -->\r\n          <el-date-picker\r\n            v-model=\"queryParams.liveTime\"\r\n            type=\"datetime\"\r\n            placeholder=\"直播开始时间\"\r\n            :default-time=\"defaultTime\"\r\n            clearable\r\n            :disabled-date=\"disabledDateFn\"\r\n          >\r\n          </el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item prop=\"liveDuration\" label=\"直播时长\">\r\n          <el-input\r\n            v-model=\"queryParams.liveDuration\"\r\n            placeholder=\"请输入直播时长(分钟)\"\r\n            clearable\r\n          ></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"teacher\" label=\"讲师\">\r\n          <el-select v-model=\"queryParams.teacher\" clearable>\r\n            <el-option value=\"朱雀\" label=\"朱雀\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-form>\r\n      <template #footer>\r\n        <el-button @click=\"close\">取消</el-button>\r\n        <el-button type=\"primary\" @click=\"submitAddLive\">确认</el-button>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script setup>\r\nimport { ref, defineExpose, defineProps, defineEmits } from \"vue\";\r\nimport { quitFn } from \"@/hooks/quitFn\";\r\nimport { addLive } from \"@/api/live\"; // 拿到新增直播的接口\r\nimport { ElMessage } from \"element-plus\";\r\nconst props = defineProps([\"classObj\"]);//接受父组件的值\r\nconst emit = defineEmits([\"change\"]);\r\nconst isOpen = ref(false); //定义打开弹窗\r\n// 新增直播\r\n//#region\r\n// 需要上传后台的数据 router.post('/addLive', async (req, res) => {\r\n//   const {\r\n//     // 直播标题\r\n//     liveName,\r\n//     // 直播时长\r\n//     liveDuration,\r\n//     // 直播讲师\r\n//     teacher,\r\n//     // 直播时间\r\n//     liveTime,\r\n//     className,\r\n//     courseName,\r\n//     // 外侧_id\r\n//     _id\r\n//   } = req.body\r\n//#endregion\r\n\r\n// 1.传入后端的数据\r\nconst queryParams = ref({\r\n  liveName: \"\",\r\n  liveTime: \"\",\r\n  liveDuration: \"\", //直播时长\r\n  teacher: \"\",\r\n});\r\nconst formRef = ref(null); //操作表规则的dom\r\n//2. 表规则校验\r\nconst rules = ref({\r\n  liveName: [{ required: true, message: \"直播标题是必填项\", trigger: \"blur\" }],\r\n  liveTime: [\r\n    { required: true, message: \"直播开始时间是必填项\", trigger: \"blur\" },\r\n  ],\r\n  liveDuration: [\r\n    { required: true, message: \"直播时长是必填项\", trigger: \"blur\" },\r\n  ],\r\n  teacher: [{ required: true, message: \"讲师是必填项\", trigger: \"blur\" }],\r\n});\r\nconst defaultTime = new Date(2000, 1, 1, 20, 30, 0); //默认时间\r\n//3. 判断日期是否被禁用 value为日期时间\r\nconst disabledDateFn = (value) => {\r\n  const date = new Date();\r\n  return date >= value; // true disabled  false 可以操作\r\n};\r\n// 1.打开对话框\r\nconst open = () => {\r\n  isOpen.value = true;\r\n};\r\nconst close = () => {\r\n  quitFn({}, () => {\r\n    isOpen.value = false; // 关闭对话框\r\n    formRef.value.resetFields();    // resetFields()重置该表单项，将其值重置为初始值，并移除校验结果\r\n\r\n  });\r\n};\r\n\r\n// 提交表规则验证的数据至后端\r\nconst submitAddLive = () => {\r\n  //validate表单验证\r\n  formRef.value.validate(async (value) => {\r\n    if (value) {\r\n      // 如果有值走这里\r\n      const classObj = props.classObj;\r\n      const { data } = await addLive({\r\n        // 取出queryParams里面的数据\r\n        ...queryParams.value,\r\n        // 拿到_id\r\n        _id: classObj.liveList._id,\r\n        className: classObj.className,\r\n        courseName: classObj.courseName,\r\n      });\r\n      // 等待后端返回的值\r\n      if (!data.code) {\r\n        // 成功了\r\n        ElMessage.success(data.txt);\r\n        isOpen.value = false;//关闭对话框\r\n        formRef.value.resetFields();//清空表单\r\n        emit(\"change\");//触发父组件的AddLive组件\r\n      }\r\n    }\r\n  });\r\n};\r\n\r\ndefineExpose({ open });\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n:deep(.el-form-item__label) {\r\n  width: 130px;\r\n}\r\n.form :deep(.el-input) {\r\n  width: 80% !important;\r\n}\r\n</style>\r\n","import script from \"./AddLiveDialog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AddLiveDialog.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AddLiveDialog.vue?vue&type=style&index=0&id=0c15bea7&lang=scss&scoped=true\"\n\nimport exportComponent from \"D:\\\\cms\\\\vue-first\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0c15bea7\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"\">\r\n    <el-drawer v-model=\"isDrawer\" size=\"50%\" :before-close=\"close\">\r\n      <template #header>\r\n        <h4>新增直播</h4>\r\n      </template>\r\n      <div class=\"header\">\r\n        <!--头部名称 -->\r\n        <h3>{{ classObj.courseName }}</h3>\r\n        <p><span>班期名称:</span> {{ classObj.className }}</p>\r\n        <!--新增直播按钮 -->\r\n        <el-button type=\"primary\" @click=\"openAddLiveDialog\">新增直播</el-button>\r\n      </div>\r\n      <!-- 直播列表 -->\r\n      <div class=\"live-list\">\r\n        <ul>\r\n          <!-- 遍历直播 -->\r\n          <li\r\n            v-for=\"item in classObj.liveList.liveList\"\r\n            :key=\"item._id\"\r\n            class=\"live-item\"\r\n          >\r\n            <!-- 回放/直播 tagTxt(item)来决定 -->\r\n            <div class=\"tag\">{{ tagTxt(item) }}</div>\r\n            <div class=\"live-content\">\r\n              <h5>{{ item.liveName }}</h5>\r\n              <div>\r\n                <span>讲师 {{ item.teacher }}</span>\r\n                <span>直播时间: {{ formatTime(item.liveTime) }}</span>\r\n                <span\r\n                  >时长:\r\n                  {{\r\n                    item.liveTime - new Date() > 0 ? \"--.--\" : \"02:04:30\"\r\n                  }}</span\r\n                >\r\n              </div>\r\n              <!--  删除直播 点击触发@click=\"deleteLiveFn(item)删除 -->\r\n              <div class=\"delete\" @click=\"deleteLiveFn(item)\">\r\n                <!-- <Delete />删除delete图标 -->\r\n                <el-icon> <Delete /></el-icon>\r\n              </div>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <!-- 对话框的组件  :classObj=\"classObj\"父传子的数据-->\r\n      <AddLiveDialog\r\n        ref=\"addLiveDialogRef\"\r\n        :classObj=\"classObj\"\r\n        @change=\"refreshClassObj\"\r\n      ></AddLiveDialog>\r\n    </el-drawer>\r\n  </div>\r\n</template>\r\n<script setup>\r\nimport { ref, defineExpose, defineProps, defineEmits } from \"vue\";\r\nimport { formatTime } from \"@/utils/formatTime\";\r\nimport { Delete } from \"@element-plus/icons-vue\";\r\nimport AddLiveDialog from \"./AddLiveDialog.vue\";\r\nimport { deleteLive } from \"@/api/live\";\r\nimport { ElMessage } from \"element-plus\";\r\nimport { quitFn } from \"@/hooks/quitFn\";\r\n\r\nconst isDrawer = ref(false); // 该值控制打开和关闭\r\nconst props = defineProps([\"classObj\"]); // 收到传过来的数据\r\nconst addLiveDialogRef = ref(null);//操作对话框的dom\r\nconst emit = defineEmits([\"change\"]);\r\n// 1.打开抽屉函数\r\nconst open = () => {\r\n  isDrawer.value = true;\r\n};\r\n//2. 关闭后在进入回到顶部\r\nconst close = () => {\r\n  document.querySelector(\".el-drawer__body\").scrollTo(0, 0);\r\n  isDrawer.value = false;\r\n};\r\n//3. 判断时间 来决定值是否为\"直播\"或\"回放\";\r\nconst tagTxt = (item) => {\r\n  return item.liveTime - new Date() > 0 ? \"直播\" : \"回放\";\r\n};\r\n//4.打开子组件的对话框\r\nconst openAddLiveDialog = () => {\r\n  addLiveDialogRef.value.open();\r\n};\r\n// \r\nconst refreshClassObj = () => {\r\n  emit(\"change\");//触发父组件index的change\r\n};\r\n// 删除直播 点击哪一个 就将item传进来 获取对应的_id值 来判断删除的哪一项\r\nconst deleteLiveFn = async (item) => {\r\n  const queryParams = {};\r\n  // 外层_id\r\n  queryParams._id = props.classObj.liveList._id;\r\n\r\n  queryParams.id = item._id;\r\n\r\n  const { data } = await deleteLive(queryParams);\r\n\r\n  if (!data.code) {\r\n    quitFn({ contentTxt: \"确定要删除此项吗\" }, () => {\r\n      ElMessage.success(data.txt);\r\n      emit(\"change\");\r\n    });\r\n  } else {\r\n    ElMessage.error(data.txt);\r\n  }\r\n};\r\ndefineExpose({ open });\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n:deep(.el-drawer__body) {\r\n  padding-top: 0;\r\n}\r\n.header {\r\n  position: absolute;\r\n  box-sizing: border-box;\r\n  width: 92%;\r\n  top: 70px;\r\n  border-bottom: 1px solid #eee;\r\n  padding-bottom: 20px;\r\n  background-color: #fff;\r\n  z-index: 100;\r\n  h3 {\r\n    font-size: 15px;\r\n    color: #000;\r\n  }\r\n  p {\r\n    font-size: 13px;\r\n    color: #666;\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n    span {\r\n      color: #ccc;\r\n    }\r\n  }\r\n}\r\n.live-list {\r\n  margin-top: 130px;\r\n  .live-item {\r\n    position: relative;\r\n    padding: 25px 60px;\r\n    &:hover {\r\n      .delete {\r\n        display: block;\r\n      }\r\n    }\r\n    .live-content {\r\n      h5 {\r\n        font-size: 14px;\r\n      }\r\n      div {\r\n        margin-top: 15px;\r\n        font-size: 12px;\r\n        color: #bfbfbf;\r\n        span {\r\n          margin-right: 50px;\r\n        }\r\n      }\r\n    }\r\n    .tag {\r\n      position: absolute;\r\n      left: 12px;\r\n      top: 25px;\r\n      width: 38px;\r\n      height: 20px;\r\n      border: 1px solid #eee;\r\n      text-align: center;\r\n      line-height: 20px;\r\n      font-size: 12px;\r\n      background-color: #fafafa;\r\n      border-radius: 5px;\r\n    }\r\n    .delete {\r\n      display: none;\r\n      position: absolute;\r\n      left: 50%;\r\n      top: 26px;\r\n      margin-left: 200px;\r\n      width: 20px;\r\n      height: 20px;\r\n      color: #e37777 !important;\r\n      cursor: pointer;\r\n      font-size: 15px !important;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import script from \"./AddLive.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AddLive.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AddLive.vue?vue&type=style&index=0&id=39c3e8e0&lang=scss&scoped=true\"\n\nimport exportComponent from \"D:\\\\cms\\\\vue-first\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-39c3e8e0\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"\">\r\n    <el-card>\r\n      <h4>班期管理</h4>\r\n    </el-card>\r\n    <el-card class=\"table\">\r\n      <div class=\"filter-section\">\r\n        <!-- type\t显示类型 range-separator\t选择范围时的分隔符\r\n        start-placeholder\t范围选择时开始日期的占位内容\r\n        end-placeholder\t范围选择时结束日期的占位内容\r\n        change\t用户确认选定的值时触发\r\n        -->\r\n        <el-date-picker\r\n          v-model=\"queryParams.enrollTime\"\r\n          type=\"daterange\"\r\n          range-separator=\"至\"\r\n          start-placeholder=\"招生时间\"\r\n          end-placeholder=\"招生时间\"\r\n          class=\"filter\"\r\n          @change=\"getClassListFn\"\r\n        />\r\n        <!-- clearable\t是否显示清除按钮 -->\r\n        <el-input\r\n          v-model=\"queryParams.className\"\r\n          placeholder=\"请输入班期名称\"\r\n          class=\"filter\"\r\n          clearable\r\n          @change=\"getClassListFn\"\r\n        ></el-input>\r\n      </div>\r\n      <el-table\r\n        class=\"table-wrapper\"\r\n        v-loading=\"loading\"\r\n        :data=\"classList\"\r\n        :max-height=\"tableHeight\"\r\n      >        \r\n        <el-table-column width=\"200\" label=\"招生时间\">\r\n          <template #default=\"{ row }\">\r\n            {{ formatTime(row.enrollTime[0]) }}\r\n            <p>至</p>\r\n            {{ formatTime(row.enrollTime[1]) }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          width=\"200\"\r\n          label=\"班期名称\"\r\n          prop=\"className\"\r\n        ></el-table-column>\r\n        <el-table-column width=\"200\" label=\"直播数量\" prop=\"className\">\r\n          <template #default=\"{ row }\">\r\n            {{ row.liveList.liveList.length }}\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column\r\n          width=\"200\"\r\n          label=\"学员人数\"\r\n          prop=\"studentNum\"\r\n        ></el-table-column>\r\n        <el-table-column\r\n          width=\"200\"\r\n          label=\"更新人\"\r\n          prop=\"updatePeople\"\r\n        ></el-table-column>\r\n        <el-table-column width=\"200\" label=\"更新时间\">\r\n          <template #default=\"{ row }\">\r\n            {{ formatTime(row.updateTime) }}\r\n          </template>\r\n        </el-table-column>\r\n        <!--fixed=\"right\" align=\"center\"固定在右侧 文本左右居中  -->\r\n        <el-table-column width=\"200\" label=\"操作\" fixed=\"right\" align=\"center\">\r\n          <!--  row 该行里面的数据  $index 为当前行 所在数组的下标 第一行 为0 第二行为 1 ... 以此类推 -->\r\n          <template #default=\"{ row, $index }\">\r\n            <el-button disabled size=\"small\">编辑班期</el-button>\r\n            <el-button\r\n              v-if=\"row.className === 'web-前端进阶框架-朱雀'\"\r\n              size=\"small\"\r\n              @click=\"openAddLive(row, $index)\"\r\n              >新增直播</el-button\r\n            >\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <!-- 分页器  -->\r\n      <el-pagination\r\n        v-model:current-page=\"queryParams.currentPage\"\r\n        v-model:page-size=\"queryParams.pageSize\"\r\n        :page-sizes=\"[10, 20, 50, 100]\"\r\n        layout=\"total, sizes, prev, pager, next, jumper\"\r\n        :total=\"total\"\r\n        @size-change=\"getClassListFn\"\r\n        @current-change=\"getClassListFn\"\r\n        class=\"pagination\"\r\n      />\r\n    </el-card>\r\n    <!--  :classObj=\"classObj\"父传子的数据 -->\r\n    <AddLive\r\n      ref=\"addLiveRef\"\r\n      :classObj=\"classObj\"\r\n      @change=\"getClassListFn\"\r\n    ></AddLive>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from \"vue\";\r\nimport { getClassList } from \"@/api/class\"; // 获取课程接口\r\nimport { formatTime } from \"@/utils/formatTime\"; // 格式化时间\r\nimport { getAutoHeight } from \"@/hooks/getAutoHeight\"; // 高度控制\r\nimport AddLive from \"./components/AddLive.vue\"; // 子组件\r\n// 准备数据 尽量与后端一致\r\n//#region\r\n// router.get(\"/classList\", async (req, res) => {\r\n//   const {\r\n//     // 每页的数据数量\r\n//     pageSize,\r\n//     // 当前页码\r\n//     currentPage,\r\n//     // 班期\r\n//     className,\r\n//     // 招生时间\r\n//     enrollTime,\r\n//   } = req.query;\r\n//#endregion\r\n\r\n// 1.给后端传入的数据\r\nconst queryParams = ref({\r\n  enrollTime: \"\", //招生时间\r\n  currentPage: 1,\r\n  pageSize: 10,\r\n  className: \"\",\r\n});\r\n// 后端返回的数据res.send({\r\n//     code: 0,\r\n//     total,\r\n//     data,\r\n//   });\r\nconst total = ref(0); //定义总数据\r\nconst loading = ref(true); //加载动画\r\nconst classList = ref([]); //班期数据\r\nconst { tableHeight } = getAutoHeight(340); //自适应高度\r\nconst classObj = ref({}); //新增直播对象\r\nconst addLiveRef = ref(null); // 方便使用子组件身上的方法\r\nconst index = ref(0); //记录初始值\r\n// 2.请求后端接口的函数\r\nconst getClassListFn = async () => {\r\n  loading.value = true;\r\n  const { data } = await getClassList(queryParams.value); // 将数据传入后台 然后返回数据{data}\r\n  classList.value = data.data;\r\n  console.log(classList.value);\r\n  total.value = data.total;\r\n\r\n  const row = classList.value[index.value];\r\n  console.log(row);\r\n  // 判断一下 row是否为真 解决选择不在时间段的时候 一直处于加载的bug\r\n  if (row) {\r\n    classObj.value = classObj.value = {\r\n      className: row.className,\r\n      courseName: row.courseName,\r\n      liveList: row.liveList,\r\n    };\r\n  }\r\n  // 关闭加载动画\r\n  setTimeout(() => {\r\n    loading.value = false;\r\n  }, 500);\r\n};\r\ngetClassListFn();\r\n// 3.点击新增直播\r\nconst openAddLive = (row, $index) => {\r\n  // 获取当前行的索引值（下标）\r\n  index.value = $index;\r\n  classObj.value = classObj.value = {\r\n    // 需要什么值就起个名字放在classObj中\r\n    className: row.className,\r\n    courseName: row.courseName,\r\n    liveList: row.liveList,\r\n  };\r\n  addLiveRef.value.open(); // 使用子组件上的 open函数 打开抽屉组件展示\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n:deep(.el-date-editor) {\r\n  vertical-align: -2px;\r\n  width: 30% !important;\r\n}\r\n.table-wrapper p {\r\n  text-indent: 50px;\r\n}\r\n</style>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=595dc672&lang=scss&scoped=true\"\n\nimport exportComponent from \"D:\\\\cms\\\\vue-first\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-595dc672\"]])\n\nexport default __exports__"],"names":["addLive","data","request","url","method","deleteLive","getLiveList","params","reviseLive","getAutoHeight","marginTop","tableHeight","ref","window","innerHeight","refreshHeight","value","refresh","margin","onMounted","addEventListener","onUnmounted","removeEventListener","onActivated","onDeactivated","quitFn","contentTxt","titleTxt","confirmButtonText","cancelButtonText","type","confirmCb","cancelCb","ElMessageBox","then","catch","formatTime","time","date","Date","year","getFullYear","month","getMonth","slice","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","formatDate","week","getDay","weekTxt","formatDetail","getClassList","isOpen","queryParams","liveName","liveTime","liveDuration","teacher","formRef","rules","required","message","trigger","defaultTime","disabledDateFn","open","close","resetFields","submitAddLive","validate","async","classObj","props","_id","liveList","className","courseName","code","ElMessage","txt","emit","expose","__exports__","isDrawer","addLiveDialogRef","document","querySelector","scrollTo","tagTxt","item","openAddLiveDialog","refreshClassObj","deleteLiveFn","id","enrollTime","currentPage","pageSize","total","loading","classList","addLiveRef","index","getClassListFn","console","log","row","setTimeout","openAddLive","$index"],"sourceRoot":""}